#!/bin/bash

echo "üîß Testando configura√ß√µes de Auto-Read para sess√µes WhatsApp"
echo "============================================================="

# Configura√ß√µes
BASE_URL="http://localhost:4000"

# Fazer login e obter token
echo "1Ô∏è‚É£ Fazendo login..."
LOGIN_RESPONSE=$(curl -s -X POST $BASE_URL/auth/login \
  -H "Content-Type: application/json" \
  -d '{
    "email": "admin@empresa.com",
    "password": "admin123"
  }')

TOKEN=$(echo $LOGIN_RESPONSE | jq -r '.access_token')

if [ "$TOKEN" = "null" ] || [ -z "$TOKEN" ]; then
  echo "‚ùå Erro ao obter token. Resposta:"
  echo $LOGIN_RESPONSE | jq '.'
  exit 1
fi

echo "‚úÖ Token obtido com sucesso"

# Buscar sess√µes WhatsApp dispon√≠veis
echo ""
echo "2Ô∏è‚É£ Buscando sess√µes WhatsApp..."
SESSIONS_RESPONSE=$(curl -s -X GET $BASE_URL/whatsapp/sessions \
  -H "Authorization: Bearer $TOKEN")

echo "Sess√µes dispon√≠veis:"
echo $SESSIONS_RESPONSE | jq '.[] | {id: .id, name: .name, sessionId: .sessionId, status: .status}'

# Pegar a primeira sess√£o conectada
SESSION_ID=$(echo $SESSIONS_RESPONSE | jq -r '.[] | select(.status == "CONNECTED") | .sessionId' | head -n 1)

if [ "$SESSION_ID" = "null" ] || [ -z "$SESSION_ID" ]; then
  echo "‚ùå Nenhuma sess√£o conectada encontrada"
  exit 1
fi

echo "‚úÖ Usando sess√£o: $SESSION_ID"

# Teste 1: Obter status global do auto-read
echo ""
echo "3Ô∏è‚É£ Obtendo status global do auto-read..."
GLOBAL_STATUS=$(curl -s -X GET "$BASE_URL/warmup/auto-read/status" \
  -H "Authorization: Bearer $TOKEN")

echo "Status global do auto-read:"
echo $GLOBAL_STATUS | jq '.'

# Teste 2: Obter configura√ß√µes atuais da sess√£o
echo ""
echo "4Ô∏è‚É£ Obtendo configura√ß√µes atuais da sess√£o..."
CURRENT_SETTINGS=$(curl -s -X GET "$BASE_URL/warmup/sessions/$SESSION_ID/auto-read-settings" \
  -H "Authorization: Bearer $TOKEN")

echo "Configura√ß√µes atuais:"
echo $CURRENT_SETTINGS | jq '.'

# Teste 3: Ativar auto-read para a sess√£o
echo ""
echo "5Ô∏è‚É£ Ativando auto-read para a sess√£o..."
ENABLE_RESPONSE=$(curl -s -X POST "$BASE_URL/warmup/sessions/$SESSION_ID/auto-read/enable" \
  -H "Authorization: Bearer $TOKEN")

echo "Resultado da ativa√ß√£o:"
echo $ENABLE_RESPONSE | jq '.'

# Teste 4: Configurar par√¢metros do auto-read
echo ""
echo "6Ô∏è‚É£ Configurando par√¢metros do auto-read..."
UPDATE_RESPONSE=$(curl -s -X PATCH "$BASE_URL/warmup/sessions/$SESSION_ID/auto-read-settings" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "autoReadInterval": 45,
    "autoReadMinDelay": 10,
    "autoReadMaxDelay": 90
  }')

echo "Resultado da configura√ß√£o:"
echo $UPDATE_RESPONSE | jq '.'

# Teste 5: Verificar configura√ß√µes ap√≥s atualiza√ß√£o
echo ""
echo "7Ô∏è‚É£ Verificando configura√ß√µes ap√≥s atualiza√ß√£o..."
UPDATED_SETTINGS=$(curl -s -X GET "$BASE_URL/warmup/sessions/$SESSION_ID/auto-read-settings" \
  -H "Authorization: Bearer $TOKEN")

echo "Configura√ß√µes atualizadas:"
echo $UPDATED_SETTINGS | jq '.'

# Teste 6: Testar com configura√ß√µes inv√°lidas
echo ""
echo "8Ô∏è‚É£ Testando configura√ß√µes inv√°lidas (delay m√≠nimo >= m√°ximo)..."
INVALID_RESPONSE=$(curl -s -X PATCH "$BASE_URL/warmup/sessions/$SESSION_ID/auto-read-settings" \
  -H "Authorization: Bearer $TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "autoReadMinDelay": 100,
    "autoReadMaxDelay": 50
  }')

echo "Resposta para configura√ß√£o inv√°lida:"
echo $INVALID_RESPONSE | jq '.'

# Teste 7: Desativar auto-read
echo ""
echo "9Ô∏è‚É£ Desativando auto-read para a sess√£o..."
DISABLE_RESPONSE=$(curl -s -X POST "$BASE_URL/warmup/sessions/$SESSION_ID/auto-read/disable" \
  -H "Authorization: Bearer $TOKEN")

echo "Resultado da desativa√ß√£o:"
echo $DISABLE_RESPONSE | jq '.'

# Teste 8: Status final
echo ""
echo "üîü Status final do auto-read..."
FINAL_STATUS=$(curl -s -X GET "$BASE_URL/warmup/auto-read/status" \
  -H "Authorization: Bearer $TOKEN")

echo "Status final:"
echo $FINAL_STATUS | jq '.'

echo ""
echo "‚úÖ Testes conclu√≠dos!"
echo ""
echo "üìã Resumo dos endpoints testados:"
echo "   1. ‚úÖ GET /warmup/auto-read/status - Status global"
echo "   2. ‚úÖ GET /warmup/sessions/:sessionId/auto-read-settings - Configura√ß√µes da sess√£o"
echo "   3. ‚úÖ POST /warmup/sessions/:sessionId/auto-read/enable - Ativar auto-read"
echo "   4. ‚úÖ PATCH /warmup/sessions/:sessionId/auto-read-settings - Configurar par√¢metros"
echo "   5. ‚úÖ POST /warmup/sessions/:sessionId/auto-read/disable - Desativar auto-read"
echo "   6. ‚úÖ Valida√ß√£o de par√¢metros inv√°lidos"
echo ""
echo "üéØ Sistema de configura√ß√£o do auto-read implementado com sucesso!"
echo "   - Controle individual por sess√£o"
echo "   - Configura√ß√µes personaliz√°veis de intervalo e delay"
echo "   - Ativa√ß√£o/desativa√ß√£o simples"
echo "   - Status global para monitoramento"
